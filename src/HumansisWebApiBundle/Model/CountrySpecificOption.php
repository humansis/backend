<?php
/**
 * CountrySpecificOption
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\WebApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Web App
 *
 * This is an API documentation for Humansis Web App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\WebApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CountrySpecificOption model.
 *
 * @package Humansis\WebApi\Model
 * @author  OpenAPI Generator team
 */
class CountrySpecificOption 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("field")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 50
     * )
     */
    protected $field;

    /**
     * @var string|null
     * @SerializedName("type")
     * @Assert\Choice({ "number", "text" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $type;

    /**
     * Unique ISO code of country
     *
     * @var string|null
     * @SerializedName("iso3")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 3
     * )
     */
    protected $iso3;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->field = isset($data['field']) ? $data['field'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->iso3 = isset($data['iso3']) ? $data['iso3'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets field.
     *
     * @return string|null
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * Sets field.
     *
     * @param string|null $field
     *
     * @return $this
     */
    public function setField($field = null)
    {
        $this->field = $field;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param string|null $type
     *
     * @return $this
     */
    public function setType($type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets iso3.
     *
     * @return string|null
     */
    public function getIso3()
    {
        return $this->iso3;
    }

    /**
     * Sets iso3.
     *
     * @param string|null $iso3  Unique ISO code of country
     *
     * @return $this
     */
    public function setIso3($iso3 = null)
    {
        $this->iso3 = $iso3;

        return $this;
    }
}


