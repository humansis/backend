<?php
/**
 * BookletBatch
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\WebApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Web App
 *
 * This is an API documentation for Humansis Web App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\WebApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BookletBatch model.
 *
 * @package Humansis\WebApi\Model
 * @author  OpenAPI Generator team
 */
class BookletBatch 
{
        /**
     * @var int
     * @SerializedName("quantityOfBooklets")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $quantityOfBooklets;

    /**
     * @var int
     * @SerializedName("quantityOfVouchers")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $quantityOfVouchers;

    /**
     * list of values for each voucher in booklet. Must be less or equal than quantityOfVouchers
     *
     * @var int[]
     * @SerializedName("values")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected $values;

    /**
     * @var int
     * @SerializedName("projectId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $projectId;

    /**
     * @var string
     * @SerializedName("currency")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $currency;

    /**
     * Password
     *
     * @var string|null
     * @SerializedName("password")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $password;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->quantityOfBooklets = isset($data['quantityOfBooklets']) ? $data['quantityOfBooklets'] : null;
        $this->quantityOfVouchers = isset($data['quantityOfVouchers']) ? $data['quantityOfVouchers'] : null;
        $this->values = isset($data['values']) ? $data['values'] : null;
        $this->projectId = isset($data['projectId']) ? $data['projectId'] : null;
        $this->currency = isset($data['currency']) ? $data['currency'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
    }

    /**
     * Gets quantityOfBooklets.
     *
     * @return int
     */
    public function getQuantityOfBooklets()
    {
        return $this->quantityOfBooklets;
    }

    /**
     * Sets quantityOfBooklets.
     *
     * @param int $quantityOfBooklets
     *
     * @return $this
     */
    public function setQuantityOfBooklets($quantityOfBooklets)
    {
        $this->quantityOfBooklets = $quantityOfBooklets;

        return $this;
    }

    /**
     * Gets quantityOfVouchers.
     *
     * @return int
     */
    public function getQuantityOfVouchers()
    {
        return $this->quantityOfVouchers;
    }

    /**
     * Sets quantityOfVouchers.
     *
     * @param int $quantityOfVouchers
     *
     * @return $this
     */
    public function setQuantityOfVouchers($quantityOfVouchers)
    {
        $this->quantityOfVouchers = $quantityOfVouchers;

        return $this;
    }

    /**
     * Gets values.
     *
     * @return int[]
     */
    public function getValues(): array
    {
        return $this->values;
    }

    /**
     * Sets values.
     *
     * @param int[] $values  list of values for each voucher in booklet. Must be less or equal than quantityOfVouchers
     *
     * @return $this
     */
    public function setValues(array $values)
    {
        $this->values = $values;

        return $this;
    }

    /**
     * Gets projectId.
     *
     * @return int
     */
    public function getProjectId()
    {
        return $this->projectId;
    }

    /**
     * Sets projectId.
     *
     * @param int $projectId
     *
     * @return $this
     */
    public function setProjectId($projectId)
    {
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * Gets currency.
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Sets currency.
     *
     * @param string $currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string|null $password  Password
     *
     * @return $this
     */
    public function setPassword($password = null)
    {
        $this->password = $password;

        return $this;
    }
}


