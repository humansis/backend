<?php
/**
 * ImportDuplicity
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\WebApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Web App
 *
 * This is an API documentation for Humansis Web App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\WebApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ImportDuplicity model.
 *
 * @package Humansis\WebApi\Model
 * @author  OpenAPI Generator team
 */
class ImportDuplicity 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var int|null
     * @SerializedName("itemId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $itemId;

    /**
     * ID of Household
     *
     * @var int|null
     * @SerializedName("duplicityCandidateId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $duplicityCandidateId;

    /**
     * @var string[]|null
     * @SerializedName("reasons")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $reasons;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->itemId = isset($data['itemId']) ? $data['itemId'] : null;
        $this->duplicityCandidateId = isset($data['duplicityCandidateId']) ? $data['duplicityCandidateId'] : null;
        $this->reasons = isset($data['reasons']) ? $data['reasons'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets itemId.
     *
     * @return int|null
     */
    public function getItemId()
    {
        return $this->itemId;
    }

    /**
     * Sets itemId.
     *
     * @param int|null $itemId
     *
     * @return $this
     */
    public function setItemId($itemId = null)
    {
        $this->itemId = $itemId;

        return $this;
    }

    /**
     * Gets duplicityCandidateId.
     *
     * @return int|null
     */
    public function getDuplicityCandidateId()
    {
        return $this->duplicityCandidateId;
    }

    /**
     * Sets duplicityCandidateId.
     *
     * @param int|null $duplicityCandidateId  ID of Household
     *
     * @return $this
     */
    public function setDuplicityCandidateId($duplicityCandidateId = null)
    {
        $this->duplicityCandidateId = $duplicityCandidateId;

        return $this;
    }

    /**
     * Gets reasons.
     *
     * @return string[]|null
     */
    public function getReasons(): ?array
    {
        return $this->reasons;
    }

    /**
     * Sets reasons.
     *
     * @param string[]|null $reasons
     *
     * @return $this
     */
    public function setReasons(array $reasons = null)
    {
        $this->reasons = $reasons;

        return $this;
    }
}


