<?php
/**
 * Booklet
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\WebApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Web App
 *
 * This is an API documentation for Humansis Web App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\WebApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Booklet model.
 *
 * @package Humansis\WebApi\Model
 * @author  OpenAPI Generator team
 */
class Booklet 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("currency")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $currency;

    /**
     * @var string|null
     * @SerializedName("code")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $code;

    /**
     * @var int|null
     * @SerializedName("projectId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $projectId;

    /**
     * @var string|null
     * @SerializedName("status")
     * @Assert\Choice({ "unassigned", "distributed", "used", "deactivated" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $status;

    /**
     * @var int|null
     * @SerializedName("totalValue")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $totalValue;

    /**
     * @var int[]|null
     * @SerializedName("individualValues")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected $individualValues;

    /**
     * @var int|null
     * @SerializedName("quantityOfBooklets")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $quantityOfBooklets;

    /**
     * @var int|null
     * @SerializedName("quantityOfVouchers")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $quantityOfVouchers;

    /**
     * @var int|null
     * @SerializedName("quantityOfUsedVouchers")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $quantityOfUsedVouchers;

    /**
     * @var int|null
     * @SerializedName("beneficiaryId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $beneficiaryId;

    /**
     * @var int|null
     * @SerializedName("assistanceId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $assistanceId;

    /**
     * @var bool|null
     * @SerializedName("deletable")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $deletable;

    /**
     * @var bool|null
     * @SerializedName("distributed")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $distributed;

    /**
     * @var string|null
     * @SerializedName("password")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $password;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->currency = isset($data['currency']) ? $data['currency'] : null;
        $this->code = isset($data['code']) ? $data['code'] : null;
        $this->projectId = isset($data['projectId']) ? $data['projectId'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
        $this->totalValue = isset($data['totalValue']) ? $data['totalValue'] : null;
        $this->individualValues = isset($data['individualValues']) ? $data['individualValues'] : null;
        $this->quantityOfBooklets = isset($data['quantityOfBooklets']) ? $data['quantityOfBooklets'] : null;
        $this->quantityOfVouchers = isset($data['quantityOfVouchers']) ? $data['quantityOfVouchers'] : null;
        $this->quantityOfUsedVouchers = isset($data['quantityOfUsedVouchers']) ? $data['quantityOfUsedVouchers'] : null;
        $this->beneficiaryId = isset($data['beneficiaryId']) ? $data['beneficiaryId'] : null;
        $this->assistanceId = isset($data['assistanceId']) ? $data['assistanceId'] : null;
        $this->deletable = isset($data['deletable']) ? $data['deletable'] : null;
        $this->distributed = isset($data['distributed']) ? $data['distributed'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets currency.
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Sets currency.
     *
     * @param string|null $currency
     *
     * @return $this
     */
    public function setCurrency($currency = null)
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Gets code.
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Sets code.
     *
     * @param string|null $code
     *
     * @return $this
     */
    public function setCode($code = null)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Gets projectId.
     *
     * @return int|null
     */
    public function getProjectId()
    {
        return $this->projectId;
    }

    /**
     * Sets projectId.
     *
     * @param int|null $projectId
     *
     * @return $this
     */
    public function setProjectId($projectId = null)
    {
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param string|null $status
     *
     * @return $this
     */
    public function setStatus($status = null)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets totalValue.
     *
     * @return int|null
     */
    public function getTotalValue()
    {
        return $this->totalValue;
    }

    /**
     * Sets totalValue.
     *
     * @param int|null $totalValue
     *
     * @return $this
     */
    public function setTotalValue($totalValue = null)
    {
        $this->totalValue = $totalValue;

        return $this;
    }

    /**
     * Gets individualValues.
     *
     * @return int[]|null
     */
    public function getIndividualValues(): ?array
    {
        return $this->individualValues;
    }

    /**
     * Sets individualValues.
     *
     * @param int[]|null $individualValues
     *
     * @return $this
     */
    public function setIndividualValues(array $individualValues = null)
    {
        $this->individualValues = $individualValues;

        return $this;
    }

    /**
     * Gets quantityOfBooklets.
     *
     * @return int|null
     */
    public function getQuantityOfBooklets()
    {
        return $this->quantityOfBooklets;
    }

    /**
     * Sets quantityOfBooklets.
     *
     * @param int|null $quantityOfBooklets
     *
     * @return $this
     */
    public function setQuantityOfBooklets($quantityOfBooklets = null)
    {
        $this->quantityOfBooklets = $quantityOfBooklets;

        return $this;
    }

    /**
     * Gets quantityOfVouchers.
     *
     * @return int|null
     */
    public function getQuantityOfVouchers()
    {
        return $this->quantityOfVouchers;
    }

    /**
     * Sets quantityOfVouchers.
     *
     * @param int|null $quantityOfVouchers
     *
     * @return $this
     */
    public function setQuantityOfVouchers($quantityOfVouchers = null)
    {
        $this->quantityOfVouchers = $quantityOfVouchers;

        return $this;
    }

    /**
     * Gets quantityOfUsedVouchers.
     *
     * @return int|null
     */
    public function getQuantityOfUsedVouchers()
    {
        return $this->quantityOfUsedVouchers;
    }

    /**
     * Sets quantityOfUsedVouchers.
     *
     * @param int|null $quantityOfUsedVouchers
     *
     * @return $this
     */
    public function setQuantityOfUsedVouchers($quantityOfUsedVouchers = null)
    {
        $this->quantityOfUsedVouchers = $quantityOfUsedVouchers;

        return $this;
    }

    /**
     * Gets beneficiaryId.
     *
     * @return int|null
     */
    public function getBeneficiaryId()
    {
        return $this->beneficiaryId;
    }

    /**
     * Sets beneficiaryId.
     *
     * @param int|null $beneficiaryId
     *
     * @return $this
     */
    public function setBeneficiaryId($beneficiaryId = null)
    {
        $this->beneficiaryId = $beneficiaryId;

        return $this;
    }

    /**
     * Gets assistanceId.
     *
     * @return int|null
     */
    public function getAssistanceId()
    {
        return $this->assistanceId;
    }

    /**
     * Sets assistanceId.
     *
     * @param int|null $assistanceId
     *
     * @return $this
     */
    public function setAssistanceId($assistanceId = null)
    {
        $this->assistanceId = $assistanceId;

        return $this;
    }

    /**
     * Gets deletable.
     *
     * @return bool|null
     */
    public function isDeletable()
    {
        return $this->deletable;
    }

    /**
     * Sets deletable.
     *
     * @param bool|null $deletable
     *
     * @return $this
     */
    public function setDeletable($deletable = null)
    {
        $this->deletable = $deletable;

        return $this;
    }

    /**
     * Gets distributed.
     *
     * @return bool|null
     */
    public function isDistributed()
    {
        return $this->distributed;
    }

    /**
     * Sets distributed.
     *
     * @param bool|null $distributed
     *
     * @return $this
     */
    public function setDistributed($distributed = null)
    {
        $this->distributed = $distributed;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string|null $password
     *
     * @return $this
     */
    public function setPassword($password = null)
    {
        $this->password = $password;

        return $this;
    }
}


