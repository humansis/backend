<?php
/**
 * User
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\WebApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Web App
 *
 * This is an API documentation for Humansis Web App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\WebApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the User model.
 *
 * @package Humansis\WebApi\Model
 * @author  OpenAPI Generator team
 */
class User 
{
        /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("email")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 255
     * )
     */
    protected $email;

    /**
     * @var string|null
     * @SerializedName("password")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 180
     * )
     */
    protected $password;

    /**
     * @var string|null
     * @SerializedName("phonePrefix")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 255
     * )
     */
    protected $phonePrefix;

    /**
     * @var string|null
     * @SerializedName("phoneNumber")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 255
     * )
     */
    protected $phoneNumber;

    /**
     * @var string[]|null
     * @SerializedName("countries")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $countries;

    /**
     * @var string|null
     * @SerializedName("language")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 2
     * )
     */
    protected $language;

    /**
     * @var string[]|null
     * @SerializedName("roles")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $roles;

    /**
     * @var int[]|null
     * @SerializedName("projectIds")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected $projectIds;

    /**
     * @var bool|null
     * @SerializedName("changePassword")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $changePassword;

    /**
     * @var bool|null
     * @SerializedName("2fa")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $_2fa;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
        $this->phonePrefix = isset($data['phonePrefix']) ? $data['phonePrefix'] : null;
        $this->phoneNumber = isset($data['phoneNumber']) ? $data['phoneNumber'] : null;
        $this->countries = isset($data['countries']) ? $data['countries'] : null;
        $this->language = isset($data['language']) ? $data['language'] : null;
        $this->roles = isset($data['roles']) ? $data['roles'] : null;
        $this->projectIds = isset($data['projectIds']) ? $data['projectIds'] : null;
        $this->changePassword = isset($data['changePassword']) ? $data['changePassword'] : false;
        $this->_2fa = isset($data['_2fa']) ? $data['_2fa'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string|null $email
     *
     * @return $this
     */
    public function setEmail($email = null)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string|null $password
     *
     * @return $this
     */
    public function setPassword($password = null)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Gets phonePrefix.
     *
     * @return string|null
     */
    public function getPhonePrefix()
    {
        return $this->phonePrefix;
    }

    /**
     * Sets phonePrefix.
     *
     * @param string|null $phonePrefix
     *
     * @return $this
     */
    public function setPhonePrefix($phonePrefix = null)
    {
        $this->phonePrefix = $phonePrefix;

        return $this;
    }

    /**
     * Gets phoneNumber.
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->phoneNumber;
    }

    /**
     * Sets phoneNumber.
     *
     * @param string|null $phoneNumber
     *
     * @return $this
     */
    public function setPhoneNumber($phoneNumber = null)
    {
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Gets countries.
     *
     * @return string[]|null
     */
    public function getCountries(): ?array
    {
        return $this->countries;
    }

    /**
     * Sets countries.
     *
     * @param string[]|null $countries
     *
     * @return $this
     */
    public function setCountries(array $countries = null)
    {
        $this->countries = $countries;

        return $this;
    }

    /**
     * Gets language.
     *
     * @return string|null
     */
    public function getLanguage()
    {
        return $this->language;
    }

    /**
     * Sets language.
     *
     * @param string|null $language
     *
     * @return $this
     */
    public function setLanguage($language = null)
    {
        $this->language = $language;

        return $this;
    }

    /**
     * Gets roles.
     *
     * @return string[]|null
     */
    public function getRoles(): ?array
    {
        return $this->roles;
    }

    /**
     * Sets roles.
     *
     * @param string[]|null $roles
     *
     * @return $this
     */
    public function setRoles(array $roles = null)
    {
        $this->roles = $roles;

        return $this;
    }

    /**
     * Gets projectIds.
     *
     * @return int[]|null
     */
    public function getProjectIds(): ?array
    {
        return $this->projectIds;
    }

    /**
     * Sets projectIds.
     *
     * @param int[]|null $projectIds
     *
     * @return $this
     */
    public function setProjectIds(array $projectIds = null)
    {
        $this->projectIds = $projectIds;

        return $this;
    }

    /**
     * Gets changePassword.
     *
     * @return bool|null
     */
    public function isChangePassword()
    {
        return $this->changePassword;
    }

    /**
     * Sets changePassword.
     *
     * @param bool|null $changePassword
     *
     * @return $this
     */
    public function setChangePassword($changePassword = null)
    {
        $this->changePassword = $changePassword;

        return $this;
    }

    /**
     * Gets _2fa.
     *
     * @return bool|null
     */
    public function is2fa()
    {
        return $this->_2fa;
    }

    /**
     * Sets _2fa.
     *
     * @param bool|null $_2fa
     *
     * @return $this
     */
    public function set2fa($_2fa = null)
    {
        $this->_2fa = $_2fa;

        return $this;
    }
}


