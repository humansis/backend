<?php

namespace BeneficiaryBundle\Repository;

use BeneficiaryBundle\Entity\HouseholdLocation;
use Doctrine\ORM\Tools\Pagination\Paginator;
use NewApiBundle\InputType\CampAddressFilterInputType;
use NewApiBundle\InputType\ResidenceAddressFilterInputType;
use NewApiBundle\InputType\TemporarySettlementAddressFilterInputType;

/**
 * HouseholdLocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HouseholdLocationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findCampAddressesByParams(CampAddressFilterInputType $filter): Paginator
    {
        $qbr = $this->createQueryBuilder('hl');

        $qbr->andWhere('hl.type = :type')
            ->setParameter('type', HouseholdLocation::LOCATION_TYPE_CAMP);

        if ($filter) {
            if ($filter->hasIds()) {
                $qbr->andWhere('hl.id IN (:ids)')
                    ->setParameter('ids', $filter->getIds());
            }
        }

        return new Paginator($qbr);
    }

    public function findResidenciesByParams(ResidenceAddressFilterInputType $filter): Paginator
    {
        $qbr = $this->createQueryBuilder('hl');

        $qbr->andWhere('hl.type = :type')
            ->setParameter('type', HouseholdLocation::LOCATION_TYPE_RESIDENCE);

        if ($filter) {
            if ($filter->hasIds()) {
                $qbr->andWhere('hl.id IN (:ids)')
                    ->setParameter('ids', $filter->getIds());
            }
        }

        return new Paginator($qbr);
    }

    public function findTemporarySettlementsByParams(TemporarySettlementAddressFilterInputType $filter): Paginator
    {
        $qbr = $this->createQueryBuilder('hl');

        $qbr->andWhere('hl.type = :type')
            ->setParameter('type', HouseholdLocation::LOCATION_TYPE_SETTLEMENT);

        if ($filter) {
            if ($filter->hasIds()) {
                $qbr->andWhere('hl.id IN (:ids)')
                    ->setParameter('ids', $filter->getIds());
            }
        }

        return new Paginator($qbr);
    }
}
