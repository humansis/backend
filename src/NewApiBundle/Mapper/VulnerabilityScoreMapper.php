<?php

declare(strict_types=1);

namespace NewApiBundle\Mapper;

use CommonBundle\Entity\Organization;
use DistributionBundle\DTO\VulnerabilityScore;
use NewApiBundle\Serializer\MapperInterface;

class VulnerabilityScoreMapper implements MapperInterface
{
    /** @var VulnerabilityScore */
    private $object;

    public function supports(object $object, $format = null, array $context = null): bool
    {
        return $object instanceof VulnerabilityScore && isset($context[self::NEW_API]) && true === $context[self::NEW_API];
    }

    public function populate(object $object)
    {
        if ($object instanceof VulnerabilityScore) {
            $this->object = $object;

            return;
        }

        throw new \InvalidArgumentException('Invalid argument. It should be instance of '.VulnerabilityScore::class.', '.get_class($object).' given.');
    }

    public function getBeneficiaryId(): int
    {
        return $this->object->getBeneficiary()->getId();
    }

    public function getTotalScore(): int
    {
        return $this->object->getTotalScore();
    }
}
