<?php
/**
 * LoginResponse
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\UserAppApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Offline App
 *
 * This is an API documentation for Humansis Offine App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\UserAppApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LoginResponse model.
 *
 * @package Humansis\UserAppApi\Model
 * @author  OpenAPI Generator team
 */
class LoginResponse 
{
        /**
     * Primary identifier
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("username")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $username;

    /**
     * @var string|null
     * @SerializedName("token")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $token;

    /**
     * @var string|null
     * @SerializedName("email")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $email;

    /**
     * @var bool|null
     * @SerializedName("changePassword")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $changePassword;

    /**
     * @var string[]|null
     * @SerializedName("availableCountries")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $availableCountries;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->username = isset($data['username']) ? $data['username'] : null;
        $this->token = isset($data['token']) ? $data['token'] : null;
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->changePassword = isset($data['changePassword']) ? $data['changePassword'] : null;
        $this->availableCountries = isset($data['availableCountries']) ? $data['availableCountries'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id  Primary identifier
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets username.
     *
     * @return string|null
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Sets username.
     *
     * @param string|null $username
     *
     * @return $this
     */
    public function setUsername($username = null)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Gets token.
     *
     * @return string|null
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Sets token.
     *
     * @param string|null $token
     *
     * @return $this
     */
    public function setToken($token = null)
    {
        $this->token = $token;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string|null $email
     *
     * @return $this
     */
    public function setEmail($email = null)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets changePassword.
     *
     * @return bool|null
     */
    public function isChangePassword()
    {
        return $this->changePassword;
    }

    /**
     * Sets changePassword.
     *
     * @param bool|null $changePassword
     *
     * @return $this
     */
    public function setChangePassword($changePassword = null)
    {
        $this->changePassword = $changePassword;

        return $this;
    }

    /**
     * Gets availableCountries.
     *
     * @return string[]|null
     */
    public function getAvailableCountries(): ?array
    {
        return $this->availableCountries;
    }

    /**
     * Sets availableCountries.
     *
     * @param string[]|null $availableCountries
     *
     * @return $this
     */
    public function setAvailableCountries(array $availableCountries = null)
    {
        $this->availableCountries = $availableCountries;

        return $this;
    }
}


