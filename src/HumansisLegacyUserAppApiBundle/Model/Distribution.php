<?php
/**
 * Distribution
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  Humansis\UserAppLegacyApi\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Humansis Offline App
 *
 * This is an API documentation for Humansis Offine App.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Humansis\UserAppLegacyApi\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Distribution model.
 *
 * @package Humansis\UserAppLegacyApi\Model
 * @author  OpenAPI Generator team
 */
class Distribution 
{
        /**
     * Primary identifier
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var string|null
     * @SerializedName("dateDistribution")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $dateDistribution;

    /**
     * @var string|null
     * @SerializedName("dateExpiration")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $dateExpiration;

    /**
     * family or individual
     *
     * @var int|null
     * @SerializedName("type")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $type;

    /**
     * @var int[]|null
     * @SerializedName("commodities")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    protected $commodities;

    /**
     * @var int|null
     * @SerializedName("beneficiaries_count")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $beneficiariesCount;

    /**
     * @var string|null
     * @SerializedName("foodLimit")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $foodLimit;

    /**
     * @var string|null
     * @SerializedName("nonfoodLimit")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $nonfoodLimit;

    /**
     * @var string|null
     * @SerializedName("cashbackLimit")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $cashbackLimit;

    /**
     * @var bool|null
     * @SerializedName("remoteDistributionAllowed")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $remoteDistributionAllowed;

    /**
     * @var bool|null
     * @SerializedName("completed")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $completed;

    /**
     * @var bool|null
     * @SerializedName("validated")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $validated;

    /**
     * @var bool|null
     * @SerializedName("archived")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $archived;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->dateDistribution = isset($data['dateDistribution']) ? $data['dateDistribution'] : null;
        $this->dateExpiration = isset($data['dateExpiration']) ? $data['dateExpiration'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->commodities = isset($data['commodities']) ? $data['commodities'] : null;
        $this->beneficiariesCount = isset($data['beneficiariesCount']) ? $data['beneficiariesCount'] : null;
        $this->foodLimit = isset($data['foodLimit']) ? $data['foodLimit'] : null;
        $this->nonfoodLimit = isset($data['nonfoodLimit']) ? $data['nonfoodLimit'] : null;
        $this->cashbackLimit = isset($data['cashbackLimit']) ? $data['cashbackLimit'] : null;
        $this->remoteDistributionAllowed = isset($data['remoteDistributionAllowed']) ? $data['remoteDistributionAllowed'] : null;
        $this->completed = isset($data['completed']) ? $data['completed'] : null;
        $this->validated = isset($data['validated']) ? $data['validated'] : null;
        $this->archived = isset($data['archived']) ? $data['archived'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id  Primary identifier
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets dateDistribution.
     *
     * @return string|null
     */
    public function getDateDistribution()
    {
        return $this->dateDistribution;
    }

    /**
     * Sets dateDistribution.
     *
     * @param string|null $dateDistribution
     *
     * @return $this
     */
    public function setDateDistribution($dateDistribution = null)
    {
        $this->dateDistribution = $dateDistribution;

        return $this;
    }

    /**
     * Gets dateExpiration.
     *
     * @return string|null
     */
    public function getDateExpiration()
    {
        return $this->dateExpiration;
    }

    /**
     * Sets dateExpiration.
     *
     * @param string|null $dateExpiration
     *
     * @return $this
     */
    public function setDateExpiration($dateExpiration = null)
    {
        $this->dateExpiration = $dateExpiration;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return int|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param int|null $type  family or individual
     *
     * @return $this
     */
    public function setType($type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets commodities.
     *
     * @return int[]|null
     */
    public function getCommodities(): ?array
    {
        return $this->commodities;
    }

    /**
     * Sets commodities.
     *
     * @param int[]|null $commodities
     *
     * @return $this
     */
    public function setCommodities(array $commodities = null)
    {
        $this->commodities = $commodities;

        return $this;
    }

    /**
     * Gets beneficiariesCount.
     *
     * @return int|null
     */
    public function getBeneficiariesCount()
    {
        return $this->beneficiariesCount;
    }

    /**
     * Sets beneficiariesCount.
     *
     * @param int|null $beneficiariesCount
     *
     * @return $this
     */
    public function setBeneficiariesCount($beneficiariesCount = null)
    {
        $this->beneficiariesCount = $beneficiariesCount;

        return $this;
    }

    /**
     * Gets foodLimit.
     *
     * @return string|null
     */
    public function getFoodLimit()
    {
        return $this->foodLimit;
    }

    /**
     * Sets foodLimit.
     *
     * @param string|null $foodLimit
     *
     * @return $this
     */
    public function setFoodLimit($foodLimit = null)
    {
        $this->foodLimit = $foodLimit;

        return $this;
    }

    /**
     * Gets nonfoodLimit.
     *
     * @return string|null
     */
    public function getNonfoodLimit()
    {
        return $this->nonfoodLimit;
    }

    /**
     * Sets nonfoodLimit.
     *
     * @param string|null $nonfoodLimit
     *
     * @return $this
     */
    public function setNonfoodLimit($nonfoodLimit = null)
    {
        $this->nonfoodLimit = $nonfoodLimit;

        return $this;
    }

    /**
     * Gets cashbackLimit.
     *
     * @return string|null
     */
    public function getCashbackLimit()
    {
        return $this->cashbackLimit;
    }

    /**
     * Sets cashbackLimit.
     *
     * @param string|null $cashbackLimit
     *
     * @return $this
     */
    public function setCashbackLimit($cashbackLimit = null)
    {
        $this->cashbackLimit = $cashbackLimit;

        return $this;
    }

    /**
     * Gets remoteDistributionAllowed.
     *
     * @return bool|null
     */
    public function isRemoteDistributionAllowed()
    {
        return $this->remoteDistributionAllowed;
    }

    /**
     * Sets remoteDistributionAllowed.
     *
     * @param bool|null $remoteDistributionAllowed
     *
     * @return $this
     */
    public function setRemoteDistributionAllowed($remoteDistributionAllowed = null)
    {
        $this->remoteDistributionAllowed = $remoteDistributionAllowed;

        return $this;
    }

    /**
     * Gets completed.
     *
     * @return bool|null
     */
    public function isCompleted()
    {
        return $this->completed;
    }

    /**
     * Sets completed.
     *
     * @param bool|null $completed
     *
     * @return $this
     */
    public function setCompleted($completed = null)
    {
        $this->completed = $completed;

        return $this;
    }

    /**
     * Gets validated.
     *
     * @return bool|null
     */
    public function isValidated()
    {
        return $this->validated;
    }

    /**
     * Sets validated.
     *
     * @param bool|null $validated
     *
     * @return $this
     */
    public function setValidated($validated = null)
    {
        $this->validated = $validated;

        return $this;
    }

    /**
     * Gets archived.
     *
     * @return bool|null
     */
    public function isArchived()
    {
        return $this->archived;
    }

    /**
     * Sets archived.
     *
     * @param bool|null $archived
     *
     * @return $this
     */
    public function setArchived($archived = null)
    {
        $this->archived = $archived;

        return $this;
    }
}


