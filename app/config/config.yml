imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: ../../src/NewApiBundle/Resources/config/workflow.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    container:
        autowiring:
            strict_mode: true
        dumper:
            inline_class_loader: true
    locale: en
    email: support@humansis.org

    # allowed languages in application
    app.locales: [ en, ar, ru, am, fr, hy, km, mn ]

    # allowed currencies in application - it contains all circulating currencies
    app.currencies: [ AED, AFN, ALL, AMD, ANG, AOA, ARS, AUD, AWG, AZN, BAM, BBD, BDT, BGN, BHD, BIF, BMD, BND, BOB, BRL,
                      BSD, BTN, BWP, BYN, BZD, CAD, CDF, CHF, CLP, CNY, COP, CRC, CUC, CUP, CVE, CZK, DJF, DKK, DOP, DZD,
                      EGP, ERN, ETB, EUR, FJD, FKP, GBP, GEL, GHS, GIP, GMD, GNF, GTQ, GYD, HKD, HNL, HRK, HTG, HUF, IDR,
                      ILS, INR, IQD, IRR, ISK, JMD, JOD, JPY, KES, KGS, KHR, KMF, KPW, KRW, KWD, KYD, KZT, LAK, LBP, LKR,
                      LRD, LSL, LYD, MAD, MDL, MGA, MKD, MMK, MNT, MOP, MRU, MUR, MVR, MWK, MXN, MYR, MZN, NAD, NGN, NIO,
                      NOK, NPR, NZD, OMR, PAB, PEN, PGK, PHP, PKR, PLN, PYG, QAR, RON, RSD, RUB, RWF, SAR, SBD, SCR, SDG,
                      SEK, SGD, SHP, SLL, SOS, SRD, SSP, STN, SYP, SZL, THB, TJS, TMT, TND, TOP, TRY, TTD, TWD, TZS, UAH,
                      UGX, USD, UYU, UZS, VES, VND, VUV, WST, XAF, XCD, XOF, XPF, YER, ZAR, ZMW ]

    # countries supported in the application
    app.countries:
        - name: Cambodia
          iso3: KHM
          currency: KHR
          adms: [ Province, District, Commune, Village ]
          archived: false

        - name: Syria
          iso3: SYR
          currency: SYP
          adms: [ Governorate, District, Sub-District, Village/Neighbourhood ]
          archived: false

        - name: Ukraine
          iso3: UKR
          currency: UAH
          adms: [ Region, District, Community, Settlement ]
          archived: false

        - name: Ukraine
          iso3: UA1
          currency: UAH
          adms: [ Region, District, Community, Settlement ]
          archived: true

        - name: Ethiopia
          iso3: ETH
          currency: ETB
          adms: [ Region, Zone, Woreda, Village ]
          archived: false

        - name: Mongolia
          iso3: MNG
          currency: MNT
          adms: [ Province, District, Commune, Village ]
          archived: false

        - name: Armenia
          iso3: ARM
          currency: AMD
          adms: [ Province, District, Commune, Village ]
          archived: false

        - name: Zambia
          iso3: ZMB
          currency: ZMW
          adms: [ Region, District, Ward, Constituency ]
          archived: false

framework:
    #esi: ~
    translator:
        fallbacks: ['%locale%']
    secret: '%secret%'
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer:
        enable_annotations: true
        name_converter: 'serializer.name_converter.camel_case_to_snake_case'
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true


sensio_framework_extra:
    router:
        annotations: false

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        server_version: '8.0'
        mapping_types:
            enum: string
        schema_filter: ~^(?!view_)~ # support views with prefix "view_"
        types:
            enum_source_type: NewApiBundle\DBAL\SourceEnum
            enum_assistance_type: DistributionBundle\DBAL\AssistanceTypeEnum
            enum_assistance_target_type: DistributionBundle\DBAL\AssistanceTargetTypeEnum
            enum_livelihood: ProjectBundle\DBAL\LivelihoodEnum
            enum_sector: ProjectBundle\DBAL\SectorEnum
            enum_sub_sector: ProjectBundle\DBAL\SubSectorEnum
            enum_import_state: NewApiBundle\DBAL\ImportStateEnum
            enum_import_queue_state: NewApiBundle\DBAL\ImportStateQueueEnum
            enum_import_duplicity_state: NewApiBundle\DBAL\ImportDuplicityStateEnum
            enum_product_category_type: NewApiBundle\DBAL\ProductCategoryTypeEnum
            enum_synchronization_batch_validation_type: NewApiBundle\DBAL\SynchronizationBatchValidationTypeEnum
            enum_relief_package_state: NewApiBundle\DBAL\ReliefPackageStateEnum
            enum_modality_type: NewApiBundle\DBAL\ModalityTypeEnum
            enum_synchronization_batch_state: NewApiBundle\DBAL\SynchronizationBatchEnum
            enum_household_shelter_status: NewApiBundle\DBAL\HouseholdShelterStatusEnum
            enum_household_support_received_type: NewApiBundle\DBAL\HouseholdSupportReceivedTypeEnum
            enum_household_assets: NewApiBundle\DBAL\HouseholdAssetsEnum
            enum_person_gender: NewApiBundle\DBAL\PersonGenderEnum
            enum_national_id_type: NewApiBundle\DBAL\NationalIdTypeEnum
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware
        auto_mapping: true
        dql:
            string_functions:
                 soundex:       DoctrineExtensions\Query\Mysql\Soundex
                 date_format:   DoctrineExtensions\Query\Mysql\DateFormat
                 timestampdiff: DoctrineExtensions\Query\Mysql\TimestampDiff
                 quarter: DoctrineExtensions\Query\Mysql\Quarter
                 month: DoctrineExtensions\Query\Mysql\Month
                 year: DoctrineExtensions\Query\Mysql\Year

            numeric_functions:
                levenshtein:        Jrk\LevenshteinBundle\ORM\Doctrine\DQL\LevenshteinFunction
                levenshtein_ratio:  Jrk\LevenshteinBundle\ORM\Doctrine\DQL\LevenshteinRatioFunction
        metadata_cache_driver:
            type: array
        result_cache_driver:
            type: array
        query_cache_driver:
            type: array
        hydrators:
            plain_values_hydrator: CommonBundle\Hydration\PlainValuesHydrator

# Swiftmailer Configuration
swiftmailer:
    transport:  '%mailer_transport%'
    host:       '%mailer_host%'
    username:   '%mailer_user%'
    password:   '%mailer_password%'
    port:       '%mailer_port%'
    encryption: '%mailer_encryption%'
    spool:      { type: memory }

doctrine_migrations:
    dir_name:             "%kernel.root_dir%/DoctrineMigrations"
    namespace:            Application\Migrations
    table_name:           migration_versions
    name:                 Application Migrations
    organize_migrations:  false # Version >= 1.2, possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false
    custom_template:      ~ # Version >= 1.2, path to your custom migrations template
#    all_or_nothing:       true # we have too old doctrine version

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\User
    from_email:
        address: "%email%"
        sender_name: "BMS Support"

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    disable_csrf_role: ROLE_USER
    format_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json : true
        failed_validation: HTTP_BAD_REQUEST
    routing_loader: false
    serializer:
        serialize_null: true

# Nelmio ApiDoc Bundle
nelmio_api_doc:
    areas:
        path_patterns: # an array of regexps
            - ^/api(?!/doc$)
    documentation:
        info:
            title: Beneficiary Management System

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'PATCH', 'GET', 'DELETE', 'OPTIONS']
            max_age: 3600
        '^/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
            hosts: ['^api\.']

distribution:
    retriever: BeneficiaryBundle\Utils\Distribution\DefaultRetriever
    # The type 'table_field' means the criteria is a real field in the target table (for eg, residencyStatus in the Beneficiary table)
    criteria: {
            gender: {
                type: table_field,
                target: Beneficiary
            },
            dateOfBirth: {
                type: table_field,
                target: Beneficiary
            },
            residencyStatus: {
                type: table_field,
                target: Beneficiary
            },
            hasNotBeenInDistributionsSince: {
                type: other,
                target: Beneficiary
            },
            disabledHeadOfHousehold: {
                type: other,
                target: Head
            },
            hasValidSmartcard: {
                type: other,
                target: Head
            },
            headOfHouseholdDateOfBirth: {
                type: table_field,
                target: Head
            },
            headOfHouseholdGender: {
                type: table_field,
                target: Head
            },
            livelihood: {
                type: table_field,
                target: Household
            },
            foodConsumptionScore: {
                type: table_field,
                target: Household
            },
            copingStrategiesIndex: {
                type: table_field,
                target: Household
            },
            incomeLevel: {
                type: table_field,
                target: Household
            },
            householdSize: {
                type: other,
                target: Household
            },
            currentLocation: {
                type: other,
                target: Household
            },
            currentAdm1: {
                type: other,
                target: Household
            },
            currentAdm2: {
                type: other,
                target: Household
            },
            currentAdm3: {
                type: other,
                target: Household
            },
            currentAdm4: {
                type: other,
                target: Household
            },
            locationType: {
                type: other,
                target: Household
            },
            campName: {
                type: other,
                target: Household
            },
            vulnerabilityCriteria: {
                type: BeneficiaryBundle\Entity\VulnerabilityCriterion,
                target: Beneficiary
            },
            countrySpecific: {
                type: BeneficiaryBundle\Entity\CountrySpecific,
                target: Household
            }
        }

services:
    acme.aws_s3.client:
        class: Aws\S3\S3Client
        factory: [Aws\S3\S3Client, 'factory']
        arguments:
            -
                version: latest
                region: '%aws_s3_region%'
                credentials:
                    key: '%aws_access_key_id%'
                    secret: '%aws_secret_access_key%'

knp_gaufrette:
    stream_wrapper: ~
    adapters:
        products:
            aws_s3:
                service_id: 'acme.aws_s3.client'
                bucket_name: '%aws_s3_bucket_name%'
                detect_content_type: true
                options:
                    directory: 'products'
        organization:
            aws_s3:
                service_id: 'acme.aws_s3.client'
                bucket_name: '%aws_s3_bucket_name%'
                detect_content_type: true
                options:
                    directory: 'organization'
        donors:
            aws_s3:
                service_id: 'acme.aws_s3.client'
                bucket_name: '%aws_s3_bucket_name%'
                detect_content_type: true
                options:
                    directory: 'donors'
    filesystems:
        products:
            adapter:    products
            alias:      products_filesystem
        organization:
            adapter:    organization
            alias:      organization_filesystem
        donors:
            adapter:    donors
            alias:      donors_filesystem

lexik_jwt_authentication:
    secret_key: '%kernel.project_dir%/app/config/jwt/private.pem'
    public_key: '%kernel.project_dir%/app/config/jwt/public.pem'
    pass_phrase: '%jwt_passphrase%'
    token_ttl: 36000 # = 10 hours
